{"version":3,"sources":["theme.js","components/Photo/FullScreen.js","components/Photo/Photo.js","components/Album/Album.js","components/Photo/PhotoSelector.js","actions/PhotoActions.js","actions/actionTypes.js","actions/AlbumActions.js","components/Common/ImageUpload.js","components/Photo/PhotoView.js","components/Common/CreateAlbumForm.js","components/Album/AlbumView.js","components/Photo/PhotoAlbum.js","components/Album/AllAlbums.js","components/Common/Navbar.js","components/Common/NavMenu.js","components/Common/Header.js","actions/CommonActions.js","App.js","serviceWorker.js","reducers/initialState.js","CombinedReducers.js","reducers/commonReducer.js","reducers/albumReducer.js","reducers/photoReducer.js","index.js"],"names":["createMuiTheme","palette","primary","green","secondary","deepOrange","error","red","typography","useNextVariants","withStyles","theme","root","display","justifyContent","alignItems","flexWrap","overflow","background","width","height","marginTop","buttonContainer","flexDirection","button","color","view","toolBar","tags","chip","margin","spacing","unit","_ref","classes","image","prevId","nextId","handleDelete","closeDialog","openDialog","open","type","albumID","console","log","id","react_default","a","createElement","className","index_es","disabled","component","Link","style","float","to","ArrowLeft_default","fontSize","onClose","aria-labelledby","aria-describedby","onClick","flexGrow","container","item","sm","Delete_default","CloseRounded_default","src","photo","alt","maxWidth","variant","marginRight","marginLeft","map","clickable","label","ArrowRight_default","padding","paper","card","PhotoCheckbox","checked","ClassNames","checkbox","Object","defineProperty","checkboxChecked","main","gridItem","tile","_ref2","photoList","albumPhotos","handleChange","handleSubmit","cellHeight","cols","values","key","includes","onChange","icon","PhotoSelector_PhotoCheckbox","checkedIcon","uploadPhoto","parseInt","createAlbum","name","photos","saveAlbum","savedAlbum","localStorage","getItem","split","setItem","toString","ImageUpload","state","dOpen","handleOpen","_this","setState","handleClose","e","stopPropagation","selectPhoto","event","target","newAlbum","push","splice","indexOf","componentDidMount","props","albumList","forEach","addToAlbum","input","files","reader","FileReader","upload","this","bind","onload","result","readAsDataURL","_this2","accept","fileUpload","opacity","position","zIndex","lab_index_es","speedDial","ariaLabel","onBlur","onMouseEnter","onMouseLeave","direction","AddPhotoAlternate_default","tooltipTitle","for","AddToPhotos_default","Photo_PhotoSelector","aria-label","undefined","React","Component","styledUpload","bottom","right","connect","album","albums","dispatch","file","photoActions","photoID","albumActions","grid","paddingLeft","paddingRight","noPhoto","list","keys","length","components_Photo_Photo","Common_ImageUpload","CreateAlbumForm","value","nextID","closeForm","openForm","Add_default","dialog","autoFocus","fullWidth","styledForm","textField","marginBottom","filter","components_Album_Album","textAlign","title","subtitle","Common_CreateAlbumForm","PhotoAlbum","viewing","clickImage","deletePhoto","removeItem","match","params","pic","prev","next","Photo_FullScreen","Photo_PhotoView","AllAlbums","slice","join","Album_AlbumView","grow","menuButton","toolbar","navbar","mixins","toggleDrawer","Menu_default","backgroundColor","navItems","navOpen","anchor","tabIndex","role","onKeyDown","Header","Common_Navbar","Common_NavMenu","common","App","styles","Common_Header","Switch","Route","exact","path","Boolean","window","location","hostname","initialState","reducer","combineReducers","arguments","assign","action","Math","max","store","createStore","getState","ReactDOM","render","BrowserRouter","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.74da431b.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\r\nimport blue from '@material-ui/core/colors/blue';\r\nimport pink from '@material-ui/core/colors/pink';\r\nimport red from '@material-ui/core/colors/red';\r\nimport green from '@material-ui/core/colors/green';\r\nimport deepOrange from '@material-ui/core/colors/deepOrange';\r\n\r\nexport default createMuiTheme({\r\n    palette: {\r\n        primary: green,\r\n        secondary: deepOrange,\r\n        error: red\r\n    },\r\n    typography: {\r\n        useNextVariants: true\r\n    }\r\n})","import React from 'react';\r\nimport { \r\n    withStyles, \r\n    Button, \r\n    Grid, \r\n    Chip, \r\n    Typography,\r\n    Paper, \r\n    Dialog, \r\n    DialogTitle, \r\n    DialogActions, \r\n    DialogContent ,\r\n    DialogContentText\r\n} from '@material-ui/core';\r\nimport ArrowLeft from '@material-ui/icons/ArrowLeft';\r\nimport ArrowRight from '@material-ui/icons/ArrowRight';\r\nimport CloseIcon from '@material-ui/icons/CloseRounded';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        flexWrap: 'wrap',\r\n        overflow: 'hidden',\r\n        background: '#263238',\r\n        width: '100%',\r\n        height: '100%',\r\n        marginTop: -5\r\n        //minHeight: 'calc(100vh - 72px)'\r\n    },\r\n    buttonContainer: {\r\n        height: '100%', \r\n        width: 100,\r\n        display: 'flex', \r\n        flexDirection: 'column'\r\n    },\r\n    button: {\r\n        height: '100%',\r\n        color: 'white',\r\n    },\r\n    view: {\r\n        width: '100%',\r\n        height: '100%',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n    toolBar: {\r\n        height: 100\r\n    },\r\n    tags: {\r\n        height: 100,\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        alignItems: 'center'\r\n    },\r\n    chip: {\r\n        margin: theme.spacing.unit,\r\n        //marginRight: theme.spacing.unit * 2\r\n    }\r\n});\r\n\r\nconst FullScreen = ({\r\n    classes,\r\n    image,\r\n    prevId,\r\n    nextId,\r\n    handleDelete,\r\n    closeDialog,\r\n    openDialog,\r\n    open,\r\n    type,\r\n    albumID\r\n}) => {\r\n    console.log(image.id - 1)\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.view}>\r\n                <div className={classes.buttonContainer}>\r\n                    <Button \r\n                        disabled={!prevId} \r\n                        component={Link} \r\n                        className={classes.button} \r\n                        style={{float: 'left'}} \r\n                        to={\"/\" + type + \"/\" + prevId}>\r\n                        <ArrowLeft style={{fontSize: 80}} />\r\n                    </Button>  \r\n                    <Dialog open={open} onClose={closeDialog} aria-labelledby=\"title\" aria-describedby=\"description\">\r\n                        <DialogTitle id=\"title\">Delete Photo?</DialogTitle>\r\n                        <DialogContent>\r\n                            <DialogContentText id=\"description\">\r\n                                Are you sure you want to delete this photo?\r\n                            </DialogContentText>\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button onClick={closeDialog}>\r\n                                No\r\n                            </Button>\r\n                            <Button component={Link} to={albumID ? \"/\" + type + \"/\" + albumID : \"/\" + type} onClick={() => handleDelete(image.id)}>\r\n                                Yes\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n                </div>\r\n                <div style={{flexGrow: 2, display: 'flex', flexDirection: 'column', height: '100%'}}>\r\n                    <div className={classes.toolBar}>\r\n                        <Grid container style={{height: '100%'}}>\r\n                            <Grid item sm={10} />\r\n                            <Grid item sm={1}>\r\n                                <Button style={{color: 'white', height: '100%'}}>\r\n                                    <DeleteIcon style={{fontSize: 40}} onClick={openDialog}/>\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item sm={1}>\r\n                                <Button component={Link} to={albumID ? \"/\" + type + \"/\" + albumID : \"/\" + type} style={{color: 'white', height: '100%'}}>\r\n                                    <CloseIcon style={{fontSize: 40}} />\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </div>\r\n                    <img src={image.photo} alt={image.photo} style={{margin: 'auto', maxWidth: 800}}/>  \r\n                        <Paper className={classes.tags}>\r\n                            <Typography variant=\"display1\" style={{marginRight: 12, marginLeft: 8}}>Tags</Typography>\r\n                            {[\"test1\", \"test2\", \"test3\", \"test4\"].map(chip => {\r\n                                return <Chip clickable variant=\"outlined\" label={chip} className={classes.chip}></Chip>;\r\n                            })}\r\n                        </Paper>\r\n                </div>\r\n                <div className={classes.buttonContainer}>\r\n                    <Button \r\n                        disabled={nextId === -1} \r\n                        component={Link} \r\n                        className={classes.button} \r\n                        style={{float: 'right'}} \r\n                        to={\"/\" + type + \"/\" + nextId}>\r\n                        <ArrowRight style={{fontSize: 80}} />\r\n                    </Button>      \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(FullScreen);","import React from 'react';\r\nimport { \r\n    withStyles, \r\n    Button, \r\n    Dialog, \r\n    Card, \r\n    CardActionArea, \r\n    CardContent \r\n} from '@material-ui/core';\r\nimport FullScreen from './FullScreen';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        padding: 0,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        overflow: 'hidden',\r\n        flexGrow: 2,\r\n    },\r\n    paper: {\r\n        width: '100%',\r\n        height: '100%',\r\n        alignItems: 'center',\r\n    },\r\n    card: {\r\n        width: 800,\r\n        height: 600,\r\n        maxWidth: 800\r\n    }\r\n});\r\n\r\nconst Photo = ({\r\n    classes,\r\n    image,\r\n    id,\r\n    type,\r\n    albumID\r\n}) => {\r\n    // TODO: Don't use card for image display, make display full screen\r\n    return (\r\n        <Button className={classes.button} component={Link} to={type === \"album\" ? \"/album/\" + albumID + \"/\" + id : \"/photo/\" + id}>\r\n            <img src={image} alt={image} style={{height: 300}}/>\r\n        </Button>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(Photo);","import React from 'react';\r\nimport { \r\n    withStyles, \r\n    Button, \r\n    Dialog, \r\n    Card, \r\n    CardActionArea, \r\n    CardContent,\r\n    Typography\r\n} from '@material-ui/core';\r\nimport FullScreen from '../Photo/FullScreen';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        padding: 0,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        overflow: 'hidden',\r\n        flexGrow: 2,\r\n    },\r\n    paper: {\r\n        width: '100%',\r\n        height: '100%',\r\n        alignItems: 'center',\r\n    },\r\n    card: {\r\n        width: 800,\r\n        height: 600,\r\n        maxWidth: 800\r\n    }\r\n});\r\n\r\nconst Album = ({\r\n    classes,\r\n    image,\r\n    id,\r\n}) => {\r\n    // TODO: Don't use card for image display, make display full screen\r\n    return (\r\n        <Button className={classes.button} component={Link} to={\"/album/\" + id}>\r\n            {image != \"\" ?\r\n                <img src={image} alt={image} style={{height: 300}}/>\r\n            : <Typography variant=\"display1\">No Photo</Typography>\r\n            }\r\n        </Button>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(Album);","import React from 'react';\r\nimport ClassNames from 'classnames';\r\nimport { \r\n    Checkbox, \r\n    withStyles, \r\n    Button, \r\n    GridList, \r\n    GridListTile, \r\n    Dialog,\r\n    DialogContent,\r\n    DialogActions,\r\n    DialogTitle \r\n} from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n    checkbox: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        width: 130,\r\n        height: 130,\r\n    },\r\n    checkboxChecked: {\r\n        background: theme.palette.secondary.main\r\n    },\r\n    gridItem: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        width: '100%'\r\n    },\r\n    tile: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        width: '100%'\r\n    }\r\n});\r\n\r\nconst PhotoCheckbox = ({\r\n    classes,\r\n    image,\r\n    checked\r\n}) => {\r\n    return (\r\n        <div className={ClassNames(classes.checkbox, { \r\n                            [classes.checkboxChecked]: checked\r\n                        })}\r\n        >\r\n            <img style={{width: 120, height: 120, margin: 'auto'}} src={image} alt={image}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst PhotoSelector = ({\r\n    classes,\r\n    open,\r\n    photoList,\r\n    albumPhotos,\r\n    handleChange,\r\n    handleSubmit,\r\n    closeDialog\r\n}) => {\r\n    return (\r\n        <div className={classes.root}>\r\n            <Dialog open={open}>\r\n                <DialogContent>\r\n                    <GridList cellHeight={150} cols={4}>\r\n                        {Object.values(photoList).map(photo => {\r\n                            return (\r\n                                <GridListTile\r\n                                    key={photo.id} \r\n                                    cols={1} \r\n                                    classes={{\r\n                                        tile: classes.tile\r\n                                    }} \r\n                                    className={classes.gridItem}\r\n                                >\r\n                                    <Checkbox\r\n                                        style={{width: 150, height: 150, padding: 0}} \r\n                                        checked={albumPhotos.includes(photo.id)}\r\n                                        onChange={handleChange(photo.id)}\r\n                                        icon={\r\n                                            <PhotoCheckbox \r\n                                                classes={classes}\r\n                                                image={photo.photo} \r\n                                                checked={false} \r\n                                            />\r\n                                        }   \r\n                                        checkedIcon={\r\n                                            <PhotoCheckbox \r\n                                                classes={classes}\r\n                                                image={photo.photo} \r\n                                                checked={true} \r\n                                            />\r\n                                        }\r\n                                    />\r\n                                </GridListTile>\r\n                            );\r\n                        })}\r\n                    </GridList>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button color=\"primary\" onClick={handleSubmit}>\r\n                        Add\r\n                    </Button>\r\n                    <Button color=\"primary\" onClick={closeDialog}>\r\n                        Cancel\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(PhotoSelector);","import * as actionTypes from './actionTypes';\r\n\r\nexport const uploadPhoto = photo => {\r\n    photo[0] = parseInt(photo[0]);\r\n    return { type: actionTypes.UPLOAD_PHOTO, photo: photo };\r\n}\r\n\r\nexport const deletePhoto = id => {\r\n    return { type: actionTypes.DELETE_PHOTO, id: id };\r\n}","// COMMON ACTIONS\r\nexport const TOGGLE_NAV_OPEN = \"TOGGLE_NAV_OPEN\";\r\n// PHOTO ACTIONS\r\nexport const UPLOAD_PHOTO = \"UPLOAD_PHOTO\";\r\nexport const DELETE_PHOTO = \"DELETE_PHOTO\";\r\n// ALBUM ACTIONS\r\nexport const CREATE_ALBUM = \"CREATE_ALBUM\";\r\nexport const ADD_TO_ALBUM = \"ADD_TO_ALBUM\";","import * as actionTypes from './actionTypes';\r\n\r\nexport const createAlbum = (id, name, photos) => {\r\n    return { type: actionTypes.CREATE_ALBUM, id: id, name: name, photos: photos !== \"\" ? photos : [] };\r\n} \r\n\r\nexport const addToAlbum = (photoList, albumID) => {\r\n    return { type: actionTypes.ADD_TO_ALBUM, photoList: photoList, albumID: albumID };\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Button, SvgIcon, Input, withStyles, Dialog, DialogTitle, DialogContent, DialogActions } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport AddToPhotos from '@material-ui/icons/AddToPhotos';\r\nimport AddPhoto from '@material-ui/icons/AddPhotoAlternate';\r\nimport PhotoSelector from '../Photo/PhotoSelector';\r\nimport * as photoActions from '../../actions/PhotoActions';\r\nimport * as albumActions from '../../actions/AlbumActions';\r\nimport { SpeedDial, SpeedDialAction, SpeedDialIcon } from '@material-ui/lab';\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing.unit * 4,\r\n        right: theme.spacing.unit * 4,\r\n        margin: theme.spacing.unit,\r\n        width: 80,\r\n        height: 80,\r\n    },\r\n    speedDial: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing.unit * 4,\r\n        right: theme.spacing.unit * 4,\r\n        //width: 80,\r\n        //height: 80\r\n    },\r\n})\r\n\r\nconst savePhoto = (src, id) => {\r\n    let savedPhoto = localStorage.getItem(\"photo-\" + id);\r\n    if(!savedPhoto){\r\n        localStorage.setItem(\"photo-\" + id, id + \"|\" + src);\r\n    }\r\n}\r\n\r\nconst saveAlbum = (id, photos) => {\r\n    let savedAlbum = localStorage.getItem(\"album-\" + id);\r\n    if(savedAlbum){\r\n        let name = savedAlbum.split(\"|\")[1];\r\n        localStorage.setItem(\"album-\" + id, id + \"|\" + name + \"|\" + photos.toString());\r\n    }\r\n}\r\n\r\nclass ImageUpload extends React.Component {\r\n    state = {\r\n        open: false,\r\n        dOpen: false,\r\n        albumPhotos: []\r\n    }\r\n    fileUpload (input, albumID) {\r\n        if(input && input.files){\r\n            let reader = new FileReader();\r\n            let upload = this.props.uploadPhoto.bind(this);\r\n            let nextId = this.props.nextId;\r\n            reader.onload = (function(file) {\r\n                return function(e){\r\n                    savePhoto(e.target.result, nextId);\r\n                    upload([-1, e.target.result]);\r\n                }\r\n            })(input.files[0]);\r\n            reader.readAsDataURL(input.files[0]);\r\n        }\r\n        if(albumID){\r\n            let photos = this.props.albumList[albumID].photos;\r\n            photos.push(this.props.nextId);\r\n            let albumPhotos = this.state.albumPhotos;\r\n            albumPhotos.push(this.props.nextId);\r\n            this.setState({albumPhotos: albumPhotos});\r\n            saveAlbum(albumID, this.state.albumPhotos);\r\n            this.props.addToAlbum(photos, albumID);\r\n        }\r\n    }\r\n\r\n    handleOpen = () => {\r\n        this.setState({open: true});\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({open: false});\r\n    }\r\n\r\n    openDialog = e => {\r\n        console.log(\"opening\")\r\n        e.stopPropagation();\r\n        this.setState({dOpen: true});\r\n    }\r\n\r\n    closeDialog = () => {\r\n        this.setState({dOpen: false});\r\n    }\r\n\r\n    selectPhoto = id => event => {\r\n        console.log(id)\r\n        if(event.target.checked){\r\n            let newAlbum = this.state.albumPhotos;\r\n            newAlbum.push(id);\r\n            this.setState({albumPhotos: newAlbum});\r\n        } else {\r\n            let newAlbum = this.state.albumPhotos;\r\n            newAlbum.splice(newAlbum.indexOf(id), 1);\r\n            this.setState({albumPhotos: newAlbum});\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if(this.props.type === \"album\"){\r\n            if(this.props.albumList[this.props.albumID]){\r\n                this.props.albumList[this.props.albumID].photos.forEach(photo => {\r\n                    let newAlbum = this.state.albumPhotos;\r\n                    newAlbum.push(photo);\r\n                    this.setState({albumPhotos: newAlbum});\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        saveAlbum(this.props.albumID, this.state.albumPhotos);\r\n        this.props.addToAlbum(this.state.albumPhotos, this.props.albumID);\r\n        this.closeDialog();\r\n    }\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n        const { type } = this.props;\r\n        const { albumID } = this.props;\r\n        let album;\r\n        console.log(this.state.albumPhotos)\r\n        if(type === \"album\"){\r\n            album = this.props.albumList[albumID];\r\n            return (\r\n                <div>\r\n                    <input type=\"file\" \r\n                        accept=\"image/*\"\r\n                        id=\"upload\"\r\n                        onChange={e => this.fileUpload(e.target, albumID)}\r\n                        style={{\r\n                            width: '0.1px',\r\n                            height: '0.1px',\r\n                            opacity: 0,\r\n                            overflow: 'hidden',\r\n                            position: 'absolute',\r\n                            zIndex: -1,\r\n                        }}\r\n                    />\r\n                    <SpeedDial\r\n                        className={classes.speedDial}\r\n                        ariaLabel=\"Album SpeedDial\"\r\n                        icon={<SpeedDialIcon />}\r\n                        onBlur={this.handleClose}\r\n                        onClick={this.handleClose}\r\n                        onMouseEnter={this.handleOpen}\r\n                        onMouseLeave={this.handleClose}\r\n                        open={this.state.open}\r\n                        direction=\"up\"\r\n                    >\r\n                        <SpeedDialAction \r\n                            icon={<AddPhoto />}\r\n                            tooltipTitle=\"Add Photo\"\r\n                            //onClick={this.handleClick}\r\n                            component=\"label\"\r\n                            for=\"upload\"\r\n                        >\r\n                        </SpeedDialAction>\r\n                        <SpeedDialAction \r\n                            icon={<AddToPhotos />}\r\n                            tooltipTitle=\"Add Photos to Album\"\r\n                            onClick={this.openDialog}\r\n                        />\r\n                    </SpeedDial>\r\n                    <PhotoSelector \r\n                        open={this.state.dOpen}\r\n                        photoList={this.props.photoList} \r\n                        albumPhotos={this.state.albumPhotos}\r\n                        handleChange={this.selectPhoto}\r\n                        handleSubmit={this.handleSubmit}\r\n                        closeDialog={this.closeDialog}\r\n                    />\r\n                </div>\r\n            );\r\n\r\n        } \r\n        return (\r\n            <Button \r\n                color=\"primary\" \r\n                variant=\"fab\" \r\n                aria-label=\"Add\" \r\n                component=\"label\" \r\n                for=\"upload\" \r\n                className={classes.button}\r\n            >\r\n\r\n                <AddPhoto />\r\n                <input type=\"file\" \r\n                    accept=\"image/*\"\r\n                    id=\"upload\"\r\n                    onChange={e => this.fileUpload(e.target, undefined)}\r\n                    style={{\r\n                        width: '0.1px',\r\n                        height: '0.1px',\r\n                        opacity: 0,\r\n                        overflow: 'hidden',\r\n                        position: 'absolute',\r\n                        zIndex: -1,\r\n                    }}/>\r\n            </Button>\r\n        );\r\n    }\r\n}\r\n\r\nconst styledUpload = withStyles(styles)(ImageUpload);\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        nextId: state.photo.nextId,\r\n        photoList: state.photo.photos,\r\n        albumList: state.album.albums\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        uploadPhoto: file => { dispatch(photoActions.uploadPhoto(file)); },\r\n        addToAlbum: (photoID, albumID) => { dispatch(albumActions.addToAlbum(photoID, albumID)); }\r\n    }\r\n}\r\n\r\nImageUpload.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    nextId: PropTypes.number.isRequired,\r\n    photoList: PropTypes.object.isRequired,\r\n    albumList: PropTypes.object.isRequired\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(styledUpload);","import React from 'react';\r\nimport { Grid, withStyles, GridList, GridListTile, Typography } from '@material-ui/core';\r\nimport Photo from './Photo';\r\nimport ImageUpload from '../Common/ImageUpload';\r\nimport FullScreen from './FullScreen';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        //width: '90%',\r\n        marginTop: 50,\r\n        //flexGrow: 2,\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        flexWrap: 'wrap',\r\n        overflow: 'hidden',\r\n        // marginLeft: '5%',\r\n        // marginRight: '5%'\r\n        //minHeight: 'calc(100vh - 72px)'\r\n    },\r\n    grid: {\r\n        width: '90%',\r\n        paddingLeft: '10%',\r\n        paddingRight: '10%',\r\n        //maxWidth: 1200,\r\n        margin: 0,\r\n        //minHeight: 300\r\n    },\r\n    gridItem: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        width: '100%'\r\n    },\r\n    tile: {\r\n        display: 'flex',\r\n        width: '100%'\r\n    },\r\n    noPhoto: {\r\n        height: '100%',\r\n        display: 'flex',    \r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    }\r\n});\r\n\r\nconst PhotoView = ({\r\n    classes,\r\n    list,\r\n    type,\r\n    albumID,\r\n}) => {\r\n    console.log(list)\r\n    if(Object.keys(list).length){\r\n        return (\r\n            <div className={classes.root}>\r\n                <GridList cellHeight={300} cols={4} className={classes.grid}>\r\n                    {Object.values(list).map(photo => {\r\n                            return (\r\n                                <GridListTile \r\n                                    key={photo.id} \r\n                                    cols={1} \r\n                                    classes={{\r\n                                        tile: classes.tile\r\n                                    }} \r\n                                    className={classes.gridItem}\r\n                                >\r\n                                    <Photo \r\n                                        image={photo.photo}\r\n                                        id={photo.id}\r\n                                        type={type}\r\n                                        albumID={albumID}\r\n                                    />\r\n                                </GridListTile>\r\n                            );\r\n                        })\r\n                    }\r\n                    {/* <GridListTile cols={1} className={classes.gridItem}>\r\n                        <ImageUpload />\r\n                    </GridListTile> */}\r\n                </GridList>\r\n                <ImageUpload type={type} albumID={albumID}/>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div className={classes.noPhoto}>\r\n                <Typography variant=\"h2\">No Photos Found :(</Typography>\r\n                <ImageUpload type={type} albumID={albumID}/>\r\n            </div>\r\n        )        \r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(PhotoView);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n    TextField, \r\n    withStyles, \r\n    Button, \r\n    Input, \r\n    Typography, \r\n    Dialog, \r\n    DialogTitle, \r\n    DialogActions, \r\n    DialogContent,\r\n    DialogContentText \r\n} from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport * as albumActions from '../../actions/AlbumActions';\r\n\r\nconst styles = theme => ({\r\n    container: {\r\n        height: '100%',\r\n        //width: 300,\r\n        //height: 100,\r\n    },\r\n    button: {\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: 200,\r\n        marginBottom: theme.spacing.unit\r\n    },\r\n});\r\n\r\nconst saveAlbum = (name, id) => {\r\n    let savedAlbum = localStorage.getItem(\"album-\" + id);\r\n    if(!savedAlbum){\r\n        localStorage.setItem(\"album-\" + id, id + \"|\" + name + \"|\");\r\n    }\r\n}\r\n\r\n// Form to create a new album\r\n// Using a class since the data can be handled with redux,\r\n// so we don't need to pass data to parents\r\nclass CreateAlbumForm extends React.Component {\r\n    state = {\r\n        name: '',\r\n        open: false\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({\r\n            name: event.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = name => {\r\n        this.props.createAlbum(-1, name, []);\r\n        this.setState({name: \"\"});\r\n        console.log(this.props.nextID)\r\n        saveAlbum(name, this.props.nextID);\r\n        this.closeForm();\r\n    }\r\n\r\n    openForm = () => {\r\n        this.setState({open: true});\r\n    }\r\n\r\n    closeForm = () => {\r\n        this.setState({open: false});\r\n    }\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n        console.log(this.props.nextID)\r\n        return (\r\n            <div className={classes.container}>\r\n                <Button variant=\"outlined\" color=\"secondary\" className={classes.button} onClick={this.openForm}>\r\n                    <AddIcon style={{fontSize: 50}}/>\r\n                </Button>\r\n                <Dialog className={classes.dialog} open={this.state.open} aria-labelledby=\"create-album-title\">\r\n                <DialogTitle id=\"create-album-title\">\r\n                    Enter Album Name\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Enter the album name\r\n                    </DialogContentText>\r\n                    <TextField \r\n                        id=\"name\"\r\n                        label=\"name\"\r\n                        //className={classes.textField}\r\n                        value={this.state.name}\r\n                        margin=\"dense\"\r\n                        onChange={this.handleChange}\r\n                        autoFocus\r\n                        fullWidth\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button color=\"primary\" onClick={this.closeForm}>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button color=\"primary\" onClick={() => this.handleSubmit(this.state.name)}>\r\n                        Create Album\r\n                    </Button>\r\n                </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst styledForm = withStyles(styles)(CreateAlbumForm);\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        albumList: state.album.albums,\r\n        nextID: state.album.nextId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        //uploadPhoto: file => { dispatch(photoActions.uploadPhoto(file));},\r\n        createAlbum: (id, name, photos) => { dispatch(albumActions.createAlbum(id, name, photos)); },\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(styledForm);","import React from 'react';\r\nimport { Grid, withStyles, GridList, GridListTile, Button, Icon, GridListTileBar } from '@material-ui/core';\r\nimport Album from './Album';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CreateAlbumForm from '../Common/CreateAlbumForm';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        //width: '90%',\r\n        marginTop: 50,\r\n        //flexGrow: 2,\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        flexWrap: 'wrap',\r\n        overflow: 'hidden',\r\n        // marginLeft: '5%',\r\n        // marginRight: '5%'\r\n        //minHeight: 'calc(100vh - 72px)'\r\n    },\r\n    grid: {\r\n        width: '90%',\r\n        paddingLeft: '10%',\r\n        paddingRight: '10%',\r\n        //maxWidth: 1200,\r\n        margin: 0,\r\n        //minHeight: 300\r\n    },\r\n    gridItem: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        width: '100%'\r\n    },\r\n    tile: {\r\n        display: 'flex',\r\n        width: '100%'\r\n    }\r\n});\r\n\r\nconst AlbumView = ({\r\n    classes,\r\n    albumList,\r\n    photoList,\r\n    createAlbum\r\n}) => {\r\n    // TODO: Implement ability to type name of album / change name / select photos\r\n    console.log(albumList)\r\n    return (\r\n        <div className={classes.root}>\r\n            <GridList cellHeight={300} cols={4} className={classes.grid}>\r\n                {console.log(albumList)}\r\n                {Object.values(albumList).map(album => {\r\n                    let image = \"\";\r\n                    if(album.photos.length){\r\n                        image = Object.values(photoList).filter(photo => photo.id === album.photos[0]);\r\n                    }\r\n                    return (\r\n                        <GridListTile \r\n                            key={album.id} \r\n                            cols={1} \r\n                            classes={{\r\n                                tile: classes.tile\r\n                            }} \r\n                            className={classes.gridItem}>\r\n                            <Album \r\n                                image={image.length ? image[0].photo : \"\"}\r\n                                id={album.id}\r\n                            />\r\n                            <GridListTileBar \r\n                                style={{textAlign: 'left'}}\r\n                                title={album.name}\r\n                                subtitle={<span>Photos: {album.photos.length}</span>}\r\n                            />\r\n                        </GridListTile>\r\n                    );\r\n                })\r\n                }\r\n                {/* <GridListTile cols={1} className={classes.gridItem}>\r\n                    <ImageUpload />\r\n                </GridListTile> */}\r\n                <GridListTile>\r\n                    {/* <Button color=\"secondary\" style={{width: '100%', height: '100%'}} onClick={() => createAlbum('test')}>\r\n                        <AddIcon style={{fontSize: 60}}/>\r\n                    </Button> */}\r\n                    <CreateAlbumForm/>\r\n                </GridListTile>\r\n            </GridList>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(AlbumView);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Photo from './Photo';\r\nimport Album from '../Album/Album';\r\nimport PhotoView from './PhotoView';\r\nimport AlbumView from '../Album/AlbumView';\r\nimport { Typography } from '@material-ui/core';\r\nimport * as photoActions from '../../actions/PhotoActions';\r\nimport FullScreen from './FullScreen';\r\n\r\nclass PhotoAlbum extends React.Component {\r\n    state = {\r\n        viewing: -1,\r\n        open: false\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({viewing: -1});\r\n    }\r\n\r\n    clickImage = id => {\r\n        this.setState({viewing: id});\r\n    }\r\n\r\n    deletePhoto = id => {\r\n        localStorage.removeItem(\"photo-\" + id);\r\n        this.closeDialog();\r\n        this.props.deletePhoto(id);\r\n    }\r\n\r\n    openDialog = () => {\r\n        this.setState({open: true});\r\n    }\r\n\r\n    closeDialog = () => {\r\n        this.setState({open: false});\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        Object.keys(localStorage).forEach(key => {\r\n            if(key.includes(\"photo\")){\r\n                let photo = localStorage.getItem(key).split(\"|\");\r\n                this.props.uploadPhoto(photo);\r\n            }\r\n        })\r\n    }\r\n\r\n    render(){\r\n        let id = this.props.match.params.id;\r\n        if(id && id !== this.state.viewing){\r\n            this.clickImage(id);\r\n        } else if(!id && this.state.viewing !== -1){\r\n            this.clickImage(-1);\r\n        }\r\n        if(this.state.viewing >= 0){\r\n            let pic = this.props.photoList[this.state.viewing];\r\n            if(pic){\r\n                let prev = Object.keys(this.props.photoList)[Object.keys(this.props.photoList).indexOf(this.state.viewing) - 1];\r\n                let next = Object.keys(this.props.photoList)[Object.keys(this.props.photoList).indexOf(this.state.viewing) + 1];\r\n                return (\r\n                    <FullScreen \r\n                        image={pic} \r\n                        prevId={prev ? prev : 0} \r\n                        nextId={next ? next : -1}\r\n                        handleDelete={this.deletePhoto}\r\n                        closeDialog={this.closeDialog}\r\n                        openDialog={this.openDialog}\r\n                        open={this.state.open}\r\n                        type={\"photo\"}\r\n                    />\r\n                );\r\n            } else {\r\n                return null;\r\n            }\r\n        } else {\r\n            return (\r\n                <PhotoView \r\n                    list={this.props.photoList} \r\n                    type={\"photo\"}\r\n                    albumID={-1}\r\n                />\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        photoList: state.photo.photos,\r\n        albumList: state.album.albums,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        //toggleDrawer: () => { dispatch(commonActions.toggleNavOpen()) }\r\n        uploadPhoto: file => { dispatch(photoActions.uploadPhoto(file));},\r\n        deletePhoto: id => { dispatch(photoActions.deletePhoto(id)); },\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PhotoAlbum);","import react from 'react';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Photo from '../Photo/Photo';\r\nimport Album from './Album';\r\nimport PhotoView from '../Photo/PhotoView';\r\nimport AlbumView from './AlbumView';\r\nimport { Typography, TextField } from '@material-ui/core';\r\nimport * as photoActions from '../../actions/PhotoActions';\r\nimport * as albumActions from '../../actions/AlbumActions';\r\nimport FullScreen from '../Photo/FullScreen';\r\n\r\nclass AllAlbums extends React.Component {\r\n\r\n    state = {\r\n        viewing: -1,\r\n        open: false\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({viewing: -1});\r\n    }\r\n\r\n    clickImage = id => {\r\n        this.setState({viewing: id});\r\n    }\r\n\r\n    deletePhoto = id => {\r\n        localStorage.setItem(\"images\", \r\n            localStorage.getItem(\"images\")\r\n                        .split(\" \")\r\n                        .filter(image => {\r\n                            return image.slice(0, image.indexOf(\":\")) != id;\r\n                        })\r\n                        .join(\" \")\r\n        )\r\n        this.props.closeDialog();\r\n        this.props.deletePhoto(id);\r\n    }\r\n\r\n    openDialog = () => {\r\n        this.setState({open: true});\r\n    }\r\n\r\n    closeDialog = () => {\r\n        this.setState({open: false});\r\n    }\r\n\r\n    createAlbum = (id, name, photos) => {\r\n        this.props.createAlbum(id, name, photos);\r\n    }\r\n\r\n    componentDidMount(){\r\n        Object.keys(localStorage).forEach(key => {\r\n            if(key.includes(\"album\")){\r\n                let album = localStorage.getItem(key).split(\"|\");\r\n                this.createAlbum(parseInt(album[0]), album[1], album[2] ? \r\n                    album[2].split(',').map(id => parseInt(id))\r\n                    : []\r\n                );\r\n            } else if(key.includes(\"photo\")){\r\n                let photo = localStorage.getItem(key).split(\"|\");\r\n                this.props.uploadPhoto(photo);\r\n            }\r\n        })\r\n    }\r\n\r\n    render(){\r\n        let albumID = this.props.match.params.id;\r\n        let image = this.props.match.params.image;\r\n        if(albumID){\r\n            let album = this.props.albumList[albumID];\r\n            let photos = album ? Object.values(this.props.photoList).filter(photo => album.photos.includes(photo.id)) : [];\r\n            if(image){\r\n                let pic = photos.filter(photo => photo.id == image);\r\n                if(pic.length){\r\n                    let prev = photos[photos.indexOf(pic[0]) - 1];\r\n                    let next = photos[photos.indexOf(pic[0]) + 1];\r\n                    return (\r\n                        <FullScreen \r\n                            image={pic[0]} \r\n                            prevId={prev ? prev.id : 0} \r\n                            nextId={next ? next.id : -1}\r\n                            handleDelete={this.deletePhoto}\r\n                            closeDialog={this.closeDialog}\r\n                            openDialog={this.openDialog}\r\n                            open={this.state.open}\r\n                            type={\"album\"}\r\n                            albumID={albumID}\r\n                        />\r\n                    );\r\n                }\r\n            }\r\n            return (\r\n                <PhotoView \r\n                    list={photos}\r\n                    type=\"album\"\r\n                    albumID={albumID}\r\n                />\r\n            )\r\n        }\r\n        return (\r\n            <AlbumView\r\n                albumList={this.props.albumList}\r\n                photoList={this.props.photoList}\r\n                createAlbum={this.createAlbum.bind(this)}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        photoList: state.photo.photos,\r\n        albumList: state.album.albums,\r\n        nextID: state.album.nextId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        uploadPhoto: photo => { dispatch(photoActions.uploadPhoto(photo));},\r\n        createAlbum: (id, name, photos) => { dispatch(albumActions.createAlbum(id, name, photos));}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AllAlbums);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { AppBar, Toolbar, Typography, IconButton } from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        flexGrow: 1\r\n    },\r\n    grow: {\r\n        flexGrow: 1\r\n    },\r\n    menuButton: {\r\n        marginLeft: -12,\r\n        marginRight: 20\r\n    },\r\n    toolbar: {\r\n        textAlign: 'left'\r\n    },\r\n    navbar: theme.mixins.toolbar,\r\n});\r\n\r\nconst Navbar = ({\r\n    classes,\r\n    toggleDrawer\r\n}) => {\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"fixed\" color=\"primary\">\r\n                <Toolbar className={classes.toolbar}>\r\n                    <IconButton \r\n                        className={classes.menuButton} \r\n                        color=\"inherit\" \r\n                        aria-label=\"Menu\" \r\n                        onClick={toggleDrawer}>\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\r\n                        Look, Photos\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            {/* below used to create spacing below app bar*/}\r\n            <div className={classes.navbar}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nNavbar.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    toggleDrawer: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Navbar);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { Drawer, List, ListItem, ListItemText, withStyles } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n    list: {\r\n        width: 250,\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    navItems: {\r\n\r\n    }\r\n});\r\n\r\nconst NavMenu = ({\r\n    classes,\r\n    navOpen,\r\n    toggleDrawer\r\n}) => {\r\n\r\n    const navItems = (\r\n        <div className={classes.list}>\r\n            <List component=\"nav\">\r\n                <ListItem button component={Link} to='/photo'>\r\n                    <ListItemText primary=\"All Photos\" />\r\n                </ListItem>\r\n                <ListItem button component={Link} to='/album'>\r\n                    <ListItemText primary=\"Albums\" />\r\n                </ListItem>\r\n                <ListItem button component={Link} to='/'>\r\n                    <ListItemText primary=\"Suggestions\" />\r\n                </ListItem>\r\n            </List>\r\n        </div>\r\n    );\r\n\r\n    console.log(navOpen);\r\n\r\n    return (\r\n        <div>\r\n            <Drawer anchor=\"left\" open={navOpen} onClose={toggleDrawer}>\r\n                <div\r\n                    tabIndex={0}\r\n                    role=\"button\"\r\n                    onClick={toggleDrawer}\r\n                    onKeyDown={toggleDrawer}\r\n                >\r\n                    {navItems}\r\n                </div>\r\n            </Drawer>\r\n        </div>\r\n    );\r\n}\r\n\r\nNavMenu.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    navOpen: PropTypes.bool.isRequired,\r\n    toggleDrawer: PropTypes.func.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(NavMenu);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as commonActions from '../../actions/CommonActions';\r\nimport Navbar from './Navbar';\r\nimport NavMenu from './NavMenu';\r\n\r\nclass Header extends React.Component {\r\n    render(){\r\n        return (\r\n            <header className=\"App-header\">\r\n                <Navbar toggleDrawer={this.props.toggleDrawer}/>\r\n                <NavMenu navOpen={this.props.navOpen} toggleDrawer={this.props.toggleDrawer} />\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        navOpen: state.common.navOpen,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        toggleDrawer: () => { dispatch(commonActions.toggleNavOpen()) }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","import * as actionTypes from './actionTypes';\r\n\r\nexport const toggleNavOpen = () => {\r\n    return { type: actionTypes.TOGGLE_NAV_OPEN };\r\n}","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport { MuiThemeProvider } from '@material-ui/core/styles';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport theme from './theme';\r\nimport PhotoAlbum from './components/Photo/PhotoAlbum';\r\nimport AllAlbums from './components/Album/AllAlbums';\r\nimport Header from './components/Common/Header';\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <MuiThemeProvider theme={theme}>\r\n                <Header />\r\n                <div className=\"App\">\r\n                    <Switch>\r\n                        <Route exact path='/photo/:id?' component={PhotoAlbum} />\r\n                        <Route exact path='/album/:id?/:image?' component={AllAlbums} />\r\n                        <Route exact path='/' component={PhotoAlbum} />\r\n                    </Switch>\r\n                </div>\r\n            </MuiThemeProvider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\r\n    common: {\r\n        navOpen: false\r\n    },\r\n    photo: {\r\n        nextId: 0,\r\n        photos: {}\r\n    },\r\n    album: {\r\n        nextId: 0,\r\n        albums: {}\r\n    }\r\n}\r\n\r\nexport default initialState;","import { combineReducers } from 'redux';\r\nimport common from './reducers/commonReducer';\r\nimport album from './reducers/albumReducer';\r\nimport photo from './reducers/photoReducer';\r\n\r\nconst reducer = combineReducers({\r\n    common,\r\n    album,\r\n    photo\r\n});\r\n\r\nexport default reducer;","import initialState from './initialState';\r\n\r\nexport default function common(state = initialState.common, action){\r\n    switch(action.type){\r\n        case 'TOGGLE_NAV_OPEN': {\r\n            console.log(state.navOpen);\r\n            return Object.assign({}, state, {\r\n                navOpen: !state.navOpen\r\n            });\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","import initialState from './initialState';\r\n\r\nexport default function album(state = initialState.album, action){\r\n    switch(action.type){\r\n        case 'CREATE_ALBUM': {\r\n            if(action.id === -1){\r\n                return Object.assign({}, state, {\r\n                    albums: Object.assign({}, state.albums,  {\r\n                        [state.nextId]: {\r\n                            id: state.nextId,\r\n                            name: action.name,\r\n                            photos: action.photos\r\n                        }\r\n                    }),\r\n                    nextId: state.nextId + 1\r\n                })\r\n            } else {\r\n                return Object.assign({}, state, {\r\n                    albums: Object.assign({}, state.albums,  {\r\n                        [action.id]: {\r\n                            id: action.id,\r\n                            name: action.name,\r\n                            photos: action.photos\r\n                        }\r\n                    }),\r\n                    nextId: Math.max(state.nextId, action.id) + 1\r\n                })\r\n            }\r\n        }\r\n        case 'ADD_TO_ALBUM': {\r\n            let match = state.albums[action.albumID];\r\n            if(!match.photos.includes(action.photoID)){\r\n                match.photos = action.photoList;\r\n            } else {\r\n                return state;\r\n            }\r\n            return Object.assign({}, state, {\r\n                albums: Object.assign({}, state.albums, {\r\n                    [action.albumID]: match\r\n                })\r\n            })\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};","import initialState from './initialState';\r\n\r\nexport default function album(state = initialState.photo, action){\r\n    switch(action.type){\r\n        case 'UPLOAD_PHOTO': {\r\n            if(action.photo[0] !== -1){\r\n                if(!Object.keys(state.photos).includes(action.photo[0])){\r\n                    return Object.assign({}, state, {\r\n                        nextId: Math.max(state.nextId + 1, action.photo[0]) + 1,\r\n                        photos: Object.assign({}, state.photos, {\r\n                            [action.photo[0]]: {\r\n                                id: action.photo[0],\r\n                                photo: action.photo[1]\r\n                            }\r\n                        })\r\n                    });\r\n                } else {\r\n                    return state;\r\n                }\r\n            } else {\r\n                return Object.assign({}, state, {\r\n                    nextId: state.nextId + 1,\r\n                    photos: Object.assign({}, state.photos, {\r\n                        [state.nextId]: {\r\n                            id: state.nextId,\r\n                            photo: action.photo[1]\r\n                        }\r\n                    })\r\n                });\r\n            }\r\n        }\r\n        case 'DELETE_PHOTO': {\r\n            return Object.assign({}, state, {\r\n                nextId: state.nextId,\r\n                photos: state.photos.filter(photo =>\r\n                    photo.id != action.id    \r\n                )\r\n            })\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport reducer from './CombinedReducers';\n\nconst store = createStore(reducer);\n\nconsole.log(store.getState())\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </BrowserRouter>, \n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}