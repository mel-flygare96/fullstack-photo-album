{"version":3,"sources":["theme.js","components/Photo/Photo.js","components/Photo/PhotoSelector.js","actions/PhotoActions.js","actions/actionTypes.js","actions/AlbumActions.js","components/Common/ImageUpload.js","components/Photo/FullScreen.js","components/Photo/PhotoView.js","components/Photo/PhotoAlbum.js","components/Album/Album.js","components/Common/CreateAlbumForm.js","components/Album/AlbumView.js","components/Album/AllAlbums.js","components/Common/Navbar.js","components/Common/NavMenu.js","components/Common/Header.js","actions/CommonActions.js","App.js","serviceWorker.js","reducers/initialState.js","CombinedReducers.js","reducers/commonReducer.js","reducers/albumReducer.js","reducers/photoReducer.js","index.js"],"names":["createMuiTheme","palette","primary","blue","secondary","pink","error","red","typography","useNextVariants","withStyles","theme","button","padding","justifyContent","alignItems","overflow","flexGrow","paper","width","height","card","maxWidth","_ref","classes","image","id","type","albumID","react_default","a","createElement","index_es","className","component","Link","to","src","alt","style","PhotoCheckbox","checked","ClassNames","checkbox","Object","defineProperty","checkboxChecked","margin","display","background","main","gridItem","tile","_ref2","open","photoList","albumPhotos","handleChange","handleSubmit","closeDialog","root","cellHeight","cols","values","map","photo","key","includes","onChange","icon","PhotoSelector_PhotoCheckbox","checkedIcon","color","onClick","uploadPhoto","parseInt","createAlbum","name","photos","saveAlbum","savedAlbum","localStorage","getItem","split","setItem","toString","ImageUpload","state","dOpen","handleOpen","_this","setState","handleClose","openDialog","e","console","log","stopPropagation","selectPhoto","event","target","newAlbum","push","splice","indexOf","componentDidMount","props","albumList","forEach","addToAlbum","input","upload","this","bind","nextId","files","_loop","i","reader","FileReader","onload","result","readAsDataURL","length","_this2","accept","fileUpload","opacity","position","zIndex","lab_index_es","speedDial","ariaLabel","onBlur","onMouseEnter","onMouseLeave","direction","AddPhotoAlternate_default","tooltipTitle","for","AddToPhotos_default","Photo_PhotoSelector","variant","aria-label","multiple","undefined","React","Component","styledUpload","bottom","spacing","unit","right","connect","album","albums","dispatch","file","photoActions","photoID","albumActions","flexWrap","marginTop","buttonContainer","flexDirection","view","toolBar","tags","chip","prevId","handleDelete","disabled","float","ArrowLeft_default","fontSize","onClose","aria-labelledby","aria-describedby","container","item","sm","Delete_default","CloseRounded_default","marginRight","marginLeft","clickable","label","ArrowRight_default","grid","paddingLeft","paddingRight","noPhoto","list","keys","components_Photo_Photo","Common_ImageUpload","PhotoAlbum","viewing","clickImage","deletePhoto","removeItem","match","params","pic","prev","next","Photo_FullScreen","Photo_PhotoView","CreateAlbumForm","value","nextID","closeForm","openForm","Add_default","dialog","autoFocus","fullWidth","styledForm","textField","marginBottom","filter","components_Album_Album","textAlign","title","subtitle","Common_CreateAlbumForm","AllAlbums","slice","join","Album_AlbumView","grow","menuButton","toolbar","navbar","mixins","toggleDrawer","Menu_default","backgroundColor","navItems","navOpen","anchor","tabIndex","role","onKeyDown","Header","Common_Navbar","Common_NavMenu","common","App","styles","Common_Header","Switch","Route","exact","path","Boolean","window","location","hostname","initialState","reducer","combineReducers","arguments","assign","action","Math","max","store","createStore","getState","ReactDOM","render","BrowserRouter","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ab6d7a77.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\r\nimport blue from '@material-ui/core/colors/blue';\r\nimport pink from '@material-ui/core/colors/pink';\r\nimport red from '@material-ui/core/colors/red';\r\nimport green from '@material-ui/core/colors/green';\r\nimport deepOrange from '@material-ui/core/colors/deepOrange';\r\n\r\nexport default createMuiTheme({\r\n    palette: {\r\n        primary: blue,\r\n        secondary: pink,\r\n        error: red\r\n    },\r\n    typography: {\r\n        useNextVariants: true\r\n    }\r\n})","import React from 'react';\r\nimport { \r\n    withStyles, \r\n    Button, \r\n} from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        padding: 0,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        overflow: 'hidden',\r\n        flexGrow: 2,\r\n    },\r\n    paper: {\r\n        width: '100%',\r\n        height: '100%',\r\n        alignItems: 'center',\r\n    },\r\n    card: {\r\n        width: 800,\r\n        height: 600,\r\n        maxWidth: 800\r\n    }\r\n});\r\n\r\n// presentational component to render a single photo box\r\nconst Photo = ({\r\n    classes,\r\n    image,\r\n    id,\r\n    type,\r\n    albumID\r\n}) => {\r\n    // TODO: Don't use card for image display, make display full screen\r\n    return (\r\n        <Button className={classes.button} component={Link} to={type === \"album\" ? \"/album/\" + albumID + \"/\" + id : \"/photo/\" + id}>\r\n            <img src={image} alt={image} style={{height: 300}}/>\r\n        </Button>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(Photo);","import React from 'react';\r\nimport ClassNames from 'classnames';\r\nimport { \r\n    Checkbox, \r\n    withStyles, \r\n    Button, \r\n    GridList, \r\n    GridListTile, \r\n    Dialog,\r\n    DialogContent,\r\n    DialogActions,\r\n    DialogTitle \r\n} from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n    checkbox: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        width: 130,\r\n        height: 130,\r\n    },\r\n    checkboxChecked: {\r\n        background: theme.palette.secondary.main\r\n    },\r\n    gridItem: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        width: '100%'\r\n    },\r\n    tile: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        width: '100%'\r\n    },\r\n    paper: {\r\n        width: 600\r\n    }\r\n});\r\n\r\n// Component for individual checkbox button\r\nconst PhotoCheckbox = ({\r\n    classes,\r\n    image,\r\n    checked\r\n}) => {\r\n    return (\r\n        <div className={ClassNames(classes.checkbox, { \r\n                            [classes.checkboxChecked]: checked\r\n                        })}\r\n        >\r\n            <img style={{width: 120, height: 120, margin: 'auto'}} src={image} alt={image}/>\r\n        </div>\r\n    );\r\n}\r\n\r\n// photo selector component to add existing photos to an album\r\nconst PhotoSelector = ({\r\n    classes,\r\n    open,\r\n    photoList,\r\n    albumPhotos,\r\n    handleChange,\r\n    handleSubmit,\r\n    closeDialog\r\n}) => {\r\n    return (\r\n        <div className={classes.root}>\r\n            <Dialog open={open} classes={{paper: classes.paper}}>\r\n                <DialogContent>\r\n                    <GridList cellHeight={150} cols={4}>\r\n                        {Object.values(photoList).map(photo => {\r\n                            return (\r\n                                <GridListTile\r\n                                    key={photo.id} \r\n                                    cols={1} \r\n                                    classes={{\r\n                                        tile: classes.tile\r\n                                    }} \r\n                                    className={classes.gridItem}\r\n                                >\r\n                                    <Checkbox\r\n                                        style={{width: 150, height: 150, padding: 0}} \r\n                                        checked={albumPhotos.includes(photo.id)}\r\n                                        onChange={handleChange(photo.id)}\r\n                                        icon={\r\n                                            <PhotoCheckbox \r\n                                                classes={classes}\r\n                                                image={photo.photo} \r\n                                                checked={false} \r\n                                            />\r\n                                        }   \r\n                                        checkedIcon={\r\n                                            <PhotoCheckbox \r\n                                                classes={classes}\r\n                                                image={photo.photo} \r\n                                                checked={true} \r\n                                            />\r\n                                        }\r\n                                    />\r\n                                </GridListTile>\r\n                            );\r\n                        })}\r\n                    </GridList>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button color=\"primary\" onClick={handleSubmit}>\r\n                        Finish\r\n                    </Button>\r\n                    <Button color=\"primary\" onClick={closeDialog}>\r\n                        Cancel\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(PhotoSelector);","import * as actionTypes from './actionTypes';\r\n\r\n// Action to add a single photo to the photo list\r\nexport const uploadPhoto = photo => {\r\n    photo[0] = parseInt(photo[0]);\r\n    return { type: actionTypes.UPLOAD_PHOTO, photo: photo };\r\n}\r\n\r\n// Action to remove a photo from the photo list\r\nexport const deletePhoto = id => {\r\n    return { type: actionTypes.DELETE_PHOTO, id: id };\r\n}","// COMMON ACTIONS\r\nexport const TOGGLE_NAV_OPEN = \"TOGGLE_NAV_OPEN\";\r\n// PHOTO ACTIONS\r\nexport const UPLOAD_PHOTO = \"UPLOAD_PHOTO\";\r\nexport const DELETE_PHOTO = \"DELETE_PHOTO\";\r\n// ALBUM ACTIONS\r\nexport const CREATE_ALBUM = \"CREATE_ALBUM\";\r\nexport const ADD_TO_ALBUM = \"ADD_TO_ALBUM\";","import * as actionTypes from './actionTypes';\r\n\r\n// Action to create an album, optionally with a list of photos\r\nexport const createAlbum = (id, name, photos) => {\r\n    return { type: actionTypes.CREATE_ALBUM, id: id, name: name, photos: photos !== \"\" ? photos : [] };\r\n} \r\n\r\n// Action to add a list of photos to an album\r\nexport const addToAlbum = (photoList, albumID) => {\r\n    return { type: actionTypes.ADD_TO_ALBUM, photoList: photoList, albumID: albumID };\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Button, SvgIcon, Input, withStyles, Dialog, DialogTitle, DialogContent, DialogActions } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport AddToPhotos from '@material-ui/icons/AddToPhotos';\r\nimport AddPhoto from '@material-ui/icons/AddPhotoAlternate';\r\nimport PhotoSelector from '../Photo/PhotoSelector';\r\nimport * as photoActions from '../../actions/PhotoActions';\r\nimport * as albumActions from '../../actions/AlbumActions';\r\nimport { SpeedDial, SpeedDialAction, SpeedDialIcon } from '@material-ui/lab';\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing.unit * 4,\r\n        right: theme.spacing.unit * 4,\r\n        margin: theme.spacing.unit,\r\n        width: 80,\r\n        height: 80,\r\n    },\r\n    speedDial: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing.unit * 4,\r\n        right: theme.spacing.unit * 4,\r\n        //width: 80,\r\n        //height: 80\r\n    },\r\n})\r\n\r\nconst savePhoto = (src, id) => {\r\n    let savedPhoto = localStorage.getItem(\"photo-\" + id);\r\n    if(!savedPhoto){\r\n        localStorage.setItem(\"photo-\" + id, id + \"|\" + src);\r\n    }\r\n}\r\n\r\nconst saveAlbum = (id, photos) => {\r\n    let savedAlbum = localStorage.getItem(\"album-\" + id);\r\n    if(savedAlbum){\r\n        let name = savedAlbum.split(\"|\")[1];\r\n        localStorage.setItem(\"album-\" + id, id + \"|\" + name + \"|\" + photos.toString());\r\n    }\r\n}\r\n\r\n/* \r\n    This is a stateful container component controlling the image upload\r\n    button / speed dial. This is a class so that any components\r\n    wanting to use it need not handle any callbacks\r\n*/\r\nclass ImageUpload extends React.Component {\r\n    state = {\r\n        open: false,\r\n        dOpen: false,\r\n        albumPhotos: []\r\n    }\r\n\r\n    // Function called when the image to be uploaded is selected\r\n    fileUpload (input, albumID) {\r\n        // Bind the class scope to the upload function for closure\r\n        let upload = this.props.uploadPhoto.bind(this);\r\n        let nextId = this.props.nextId;\r\n        console.log(input.files)\r\n        if(input && input.files){\r\n            for(let i = 0; i < input.files.length; i++){\r\n                (function(image){\r\n                    let reader = new FileReader();\r\n                    reader.onload = function(thing) {\r\n                        return function(e){\r\n                            savePhoto(e.target.result, nextId + i);\r\n                            upload([-1, e.target.result]);\r\n                        }\r\n                    }(image);\r\n                    reader.readAsDataURL(image);\r\n                })(input.files[i]);\r\n            }\r\n        }\r\n        if(albumID){\r\n            let photos = this.props.albumList[albumID].photos;\r\n            photos.push(this.props.nextId);\r\n            let albumPhotos = this.state.albumPhotos;\r\n            albumPhotos.push(this.props.nextId);\r\n            this.setState({albumPhotos: albumPhotos});\r\n            saveAlbum(albumID, this.state.albumPhotos);\r\n            this.props.addToAlbum(photos, albumID);\r\n        }\r\n    }\r\n\r\n    // This handles the opening of the speed dial\r\n    handleOpen = () => {\r\n        this.setState({open: true});\r\n    }\r\n\r\n    // This handles the closing of the speed dial\r\n    handleClose = () => {\r\n        this.setState({open: false});\r\n    }\r\n\r\n    // This handles the opening of the photo selector dialog\r\n    openDialog = e => {\r\n        console.log(\"opening\")\r\n        e.stopPropagation();\r\n        this.setState({dOpen: true});\r\n    }\r\n\r\n    // This handles the closing of the photo selector dialog\r\n    closeDialog = () => {\r\n        this.setState({dOpen: false});\r\n    }\r\n\r\n    // The handles the checking of photos selected by the photo selector\r\n    selectPhoto = id => event => {\r\n        console.log(id)\r\n        if(event.target.checked){\r\n            let newAlbum = this.state.albumPhotos;\r\n            newAlbum.push(id);\r\n            this.setState({albumPhotos: newAlbum});\r\n        } else {\r\n            let newAlbum = this.state.albumPhotos;\r\n            newAlbum.splice(newAlbum.indexOf(id), 1);\r\n            this.setState({albumPhotos: newAlbum});\r\n        }\r\n    }\r\n\r\n    // When component mounts, load the albums and photos from local storage\r\n    componentDidMount = () => {\r\n        if(this.props.type === \"album\"){\r\n            if(this.props.albumList[this.props.albumID]){\r\n                this.props.albumList[this.props.albumID].photos.forEach(photo => {\r\n                    let newAlbum = this.state.albumPhotos;\r\n                    newAlbum.push(photo);\r\n                    this.setState({albumPhotos: newAlbum});\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    // Save the photos checked by the photo selector and add them to the associated album\r\n    handleSubmit = () => {\r\n        saveAlbum(this.props.albumID, this.state.albumPhotos);\r\n        this.props.addToAlbum(this.state.albumPhotos, this.props.albumID);\r\n        this.closeDialog();\r\n    }\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n        const { type } = this.props;\r\n        const { albumID } = this.props;\r\n        let album;\r\n        console.log(this.state.albumPhotos)\r\n        if(type === \"album\"){\r\n            album = this.props.albumList[albumID];\r\n            return (\r\n                <div>\r\n                    <input type=\"file\" \r\n                        accept=\"image/*\"\r\n                        id=\"upload\"\r\n                        onChange={e => this.fileUpload(e.target, albumID)}\r\n                        style={{\r\n                            width: '0.1px',\r\n                            height: '0.1px',\r\n                            opacity: 0,\r\n                            overflow: 'hidden',\r\n                            position: 'absolute',\r\n                            zIndex: -1,\r\n                        }}\r\n                    />\r\n                    <SpeedDial\r\n                        className={classes.speedDial}\r\n                        ariaLabel=\"Album SpeedDial\"\r\n                        icon={<SpeedDialIcon />}\r\n                        onBlur={this.handleClose}\r\n                        onClick={this.handleClose}\r\n                        onMouseEnter={this.handleOpen}\r\n                        onMouseLeave={this.handleClose}\r\n                        open={this.state.open}\r\n                        direction=\"up\"\r\n                    >\r\n                        <SpeedDialAction \r\n                            icon={<AddPhoto />}\r\n                            tooltipTitle=\"Add Photo\"\r\n                            //onClick={this.handleClick}\r\n                            component=\"label\"\r\n                            for=\"upload\"\r\n                        >\r\n                        </SpeedDialAction>\r\n                        <SpeedDialAction \r\n                            icon={<AddToPhotos />}\r\n                            tooltipTitle=\"Add Photos to Album\"\r\n                            onClick={this.openDialog}\r\n                        />\r\n                    </SpeedDial>\r\n                    <PhotoSelector \r\n                        open={this.state.dOpen}\r\n                        photoList={this.props.photoList} \r\n                        albumPhotos={this.state.albumPhotos}\r\n                        handleChange={this.selectPhoto}\r\n                        handleSubmit={this.handleSubmit}\r\n                        closeDialog={this.closeDialog}\r\n                    />\r\n                </div>\r\n            );\r\n\r\n        } \r\n        return (\r\n            <Button \r\n                color=\"primary\" \r\n                variant=\"fab\" \r\n                aria-label=\"Add\" \r\n                component=\"label\" \r\n                for=\"upload\" \r\n                className={classes.button}\r\n            >\r\n\r\n                <AddPhoto />\r\n                <input type=\"file\" \r\n                    multiple\r\n                    accept=\"image/*\"\r\n                    id=\"upload\"\r\n                    onChange={e => this.fileUpload(e.target, undefined)}\r\n                    style={{\r\n                        width: '0.1px',\r\n                        height: '0.1px',\r\n                        opacity: 0,\r\n                        overflow: 'hidden',\r\n                        position: 'absolute',\r\n                        zIndex: -1,\r\n                    }}/>\r\n            </Button>\r\n        );\r\n    }\r\n}\r\n\r\n// Apply the CSS in JS styles\r\nconst styledUpload = withStyles(styles)(ImageUpload);\r\n\r\n// Get next photo id, photoList and albumList from state\r\nconst mapStateToProps = state => {\r\n    return {\r\n        nextId: state.photo.nextId,\r\n        photoList: state.photo.photos,\r\n        albumList: state.album.albums\r\n    }\r\n}\r\n\r\n// Redux dispatches\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        uploadPhoto: file => { dispatch(photoActions.uploadPhoto(file)); },\r\n        addToAlbum: (photoID, albumID) => { dispatch(albumActions.addToAlbum(photoID, albumID)); }\r\n    }\r\n}\r\n\r\nImageUpload.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    nextId: PropTypes.number.isRequired,\r\n    photoList: PropTypes.object.isRequired,\r\n    albumList: PropTypes.object.isRequired\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(styledUpload);","import React from 'react';\r\nimport { \r\n    withStyles, \r\n    Button, \r\n    Grid, \r\n    Chip, \r\n    Typography,\r\n    Paper, \r\n    Dialog, \r\n    DialogTitle, \r\n    DialogActions, \r\n    DialogContent ,\r\n    DialogContentText\r\n} from '@material-ui/core';\r\nimport ArrowLeft from '@material-ui/icons/ArrowLeft';\r\nimport ArrowRight from '@material-ui/icons/ArrowRight';\r\nimport CloseIcon from '@material-ui/icons/CloseRounded';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        flexWrap: 'wrap',\r\n        overflow: 'hidden',\r\n        background: '#263238',\r\n        width: '100%',\r\n        height: '100%',\r\n        marginTop: -5\r\n        //minHeight: 'calc(100vh - 72px)'\r\n    },\r\n    buttonContainer: {\r\n        height: '100%', \r\n        width: 100,\r\n        display: 'flex', \r\n        flexDirection: 'column'\r\n    },\r\n    button: {\r\n        height: '100%',\r\n        color: 'white',\r\n    },\r\n    view: {\r\n        width: '100%',\r\n        height: '100%',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n    toolBar: {\r\n        height: 100\r\n    },\r\n    tags: {\r\n        height: 100,\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        alignItems: 'center'\r\n    },\r\n    chip: {\r\n        margin: theme.spacing.unit,\r\n        //marginRight: theme.spacing.unit * 2\r\n    }\r\n});\r\n\r\n// This component renders a fullscreen view of the photo, along with delete button\r\n// close button, and buttons to go to the next and previous photos\r\nconst FullScreen = ({\r\n    classes,\r\n    image,\r\n    prevId,\r\n    nextId,\r\n    handleDelete,\r\n    closeDialog,\r\n    openDialog,\r\n    open,\r\n    type,\r\n    albumID\r\n}) => {\r\n    console.log(image.id - 1)\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.view}>\r\n                <div className={classes.buttonContainer}>\r\n                    {/* Button to go to the next phot. Disabled if no next photo. */}\r\n                    <Button \r\n                        disabled={!prevId} \r\n                        component={Link} \r\n                        className={classes.button} \r\n                        style={{float: 'left'}} \r\n                        to={\"/\" + type + \"/\" + prevId}>\r\n                        <ArrowLeft style={{fontSize: 80}} />\r\n                    </Button>  \r\n                    <Dialog open={open} onClose={closeDialog} aria-labelledby=\"title\" aria-describedby=\"description\">\r\n                        <DialogTitle id=\"title\">Delete Photo?</DialogTitle>\r\n                        <DialogContent>\r\n                            <DialogContentText id=\"description\">\r\n                                Are you sure you want to delete this photo?\r\n                            </DialogContentText>\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button onClick={closeDialog}>\r\n                                No\r\n                            </Button>\r\n                            <Button component={Link} to={albumID ? \"/\" + type + \"/\" + albumID : \"/\" + type} onClick={() => handleDelete(image.id)}>\r\n                                Yes\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n                </div>\r\n                <div style={{flexGrow: 2, display: 'flex', flexDirection: 'column', height: '100%'}}>\r\n                    <div className={classes.toolBar}>\r\n                        <Grid container style={{height: '100%'}}>\r\n                            <Grid item sm={10} />\r\n                            <Grid item sm={1}>\r\n                                <Button style={{color: 'white', height: '100%'}}>\r\n                                    <DeleteIcon style={{fontSize: 40}} onClick={openDialog}/>\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item sm={1}>\r\n                                <Button component={Link} to={albumID ? \"/\" + type + \"/\" + albumID : \"/\" + type} style={{color: 'white', height: '100%'}}>\r\n                                    <CloseIcon style={{fontSize: 40}} />\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </div>\r\n                    <img src={image.photo} alt={image.photo} style={{margin: 'auto', maxWidth: 800}}/>  \r\n                        <Paper className={classes.tags}>\r\n                            <Typography variant=\"display1\" style={{marginRight: 12, marginLeft: 8}}>Tags</Typography>\r\n                            {[\"test1\", \"test2\", \"test3\", \"test4\"].map(chip => {\r\n                                return <Chip clickable variant=\"outlined\" label={chip} className={classes.chip}></Chip>;\r\n                            })}\r\n                        </Paper>\r\n                </div>\r\n                <div className={classes.buttonContainer}>\r\n                    {/* Button to go to the next photo. Disabled if no next photo. */}\r\n                    <Button \r\n                        disabled={nextId === -1} \r\n                        component={Link} \r\n                        className={classes.button} \r\n                        style={{float: 'right'}} \r\n                        to={\"/\" + type + \"/\" + nextId}>\r\n                        <ArrowRight style={{fontSize: 80}} />\r\n                    </Button>      \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(FullScreen);","import React from 'react';\r\nimport { Grid, withStyles, GridList, GridListTile, Typography } from '@material-ui/core';\r\nimport Photo from './Photo';\r\nimport ImageUpload from '../Common/ImageUpload';\r\nimport FullScreen from './FullScreen';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        //width: '90%',\r\n        marginTop: 50,\r\n        //flexGrow: 2,\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        flexWrap: 'wrap',\r\n        overflow: 'hidden',\r\n        // marginLeft: '5%',\r\n        // marginRight: '5%'\r\n        //minHeight: 'calc(100vh - 72px)'\r\n    },\r\n    grid: {\r\n        width: '90%',\r\n        paddingLeft: '10%',\r\n        paddingRight: '10%',\r\n        //maxWidth: 1200,\r\n        margin: 0,\r\n        //minHeight: 300\r\n    },\r\n    gridItem: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        width: '100%'\r\n    },\r\n    tile: {\r\n        display: 'flex',\r\n        width: '100%'\r\n    },\r\n    noPhoto: {\r\n        height: '100%',\r\n        display: 'flex',    \r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    }\r\n});\r\n\r\n// Presentational component for rendering a grid of photos\r\nconst PhotoView = ({\r\n    classes,\r\n    list,\r\n    type,\r\n    albumID,\r\n}) => {\r\n    console.log(list)\r\n    if(Object.keys(list).length){\r\n        return (\r\n            <div className={classes.root}>\r\n                <GridList cellHeight={300} cols={4} className={classes.grid}>\r\n                    {Object.values(list).map(photo => {\r\n                            return (\r\n                                <GridListTile \r\n                                    key={photo.id} \r\n                                    cols={1} \r\n                                    classes={{\r\n                                        tile: classes.tile\r\n                                    }} \r\n                                    className={classes.gridItem}\r\n                                >\r\n                                    <Photo \r\n                                        image={photo.photo}\r\n                                        id={photo.id}\r\n                                        type={type}\r\n                                        albumID={albumID}\r\n                                    />\r\n                                </GridListTile>\r\n                            );\r\n                        })\r\n                    }\r\n                    {/* <GridListTile cols={1} className={classes.gridItem}>\r\n                        <ImageUpload />\r\n                    </GridListTile> */}\r\n                </GridList>\r\n                <ImageUpload type={type} albumID={albumID}/>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div className={classes.noPhoto}>\r\n                <Typography variant=\"h2\">No Photos Found :(</Typography>\r\n                <ImageUpload type={type} albumID={albumID}/>\r\n            </div>\r\n        )        \r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(PhotoView);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PhotoView from './PhotoView';\r\nimport * as photoActions from '../../actions/PhotoActions';\r\nimport FullScreen from './FullScreen';\r\n\r\n/* \r\n    Primary container for the 'All Photos' view. \r\n*/\r\nclass PhotoAlbum extends React.Component {\r\n    state = {\r\n        viewing: -1,\r\n        open: false\r\n    }\r\n\r\n    // Close the fullscreen view\r\n    handleClose = () => {\r\n        this.setState({viewing: -1});\r\n    }\r\n\r\n    // Set the viewing id to the clicked photo\r\n    clickImage = id => {\r\n        this.setState({viewing: id});\r\n    }\r\n\r\n    // delete the photo with the matching id\r\n    deletePhoto = id => {\r\n        localStorage.removeItem(\"photo-\" + id);\r\n        this.closeDialog();\r\n        this.props.deletePhoto(id);\r\n    }\r\n\r\n    // open the deletion dialog\r\n    openDialog = () => {\r\n        this.setState({open: true});\r\n    }\r\n\r\n    // close the deletion dialog\r\n    closeDialog = () => {\r\n        this.setState({open: false});\r\n    }\r\n\r\n    // When component moints, load all unloaded photos\r\n    componentDidMount = () => {\r\n        Object.keys(localStorage).forEach(key => {\r\n            if(key.includes(\"photo\")){\r\n                let photo = localStorage.getItem(key).split(\"|\");\r\n                this.props.uploadPhoto(photo);\r\n            }\r\n        })\r\n    }\r\n\r\n    render(){\r\n        let id = this.props.match.params.id;\r\n        // if looking at a new image, set viewing id to id of url param\r\n        if(id && id !== this.state.viewing){\r\n            this.clickImage(id);\r\n        // if viewing all photos, set viewing id to -1 for no photo\r\n        } else if(!id && this.state.viewing !== -1){\r\n            this.clickImage(-1);\r\n        }\r\n        // if we are viewing a photo\r\n        if(this.state.viewing >= 0){\r\n            // get photo being viewed\r\n            let pic = this.props.photoList[this.state.viewing];\r\n            if(pic){\r\n                // get previous photo in list\r\n                let prev = Object.keys(this.props.photoList)[Object.keys(this.props.photoList).indexOf(this.state.viewing) - 1];\r\n                // get next photo in list\r\n                let next = Object.keys(this.props.photoList)[Object.keys(this.props.photoList).indexOf(this.state.viewing) + 1];\r\n                return (\r\n                    // display the fullscreen photo view component\r\n                    <FullScreen \r\n                        image={pic} \r\n                        prevId={prev ? prev : 0} \r\n                        nextId={next ? next : -1}\r\n                        handleDelete={this.deletePhoto}\r\n                        closeDialog={this.closeDialog}\r\n                        openDialog={this.openDialog}\r\n                        open={this.state.open}\r\n                        type={\"photo\"}\r\n                    />\r\n                );\r\n            } else {\r\n                return null;\r\n            }\r\n        } else {\r\n            // show all photos\r\n            return (\r\n                <PhotoView \r\n                    list={this.props.photoList} \r\n                    type={\"photo\"}\r\n                    albumID={-1}\r\n                />\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        photoList: state.photo.photos,\r\n        albumList: state.album.albums,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        uploadPhoto: file => { dispatch(photoActions.uploadPhoto(file));},\r\n        deletePhoto: id => { dispatch(photoActions.deletePhoto(id)); },\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PhotoAlbum);","import React from 'react';\r\nimport { \r\n    withStyles, \r\n    Button, \r\n    Dialog, \r\n    Card, \r\n    CardActionArea, \r\n    CardContent,\r\n    Typography\r\n} from '@material-ui/core';\r\nimport FullScreen from '../Photo/FullScreen';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        padding: 0,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        overflow: 'hidden',\r\n        flexGrow: 2,\r\n    },\r\n    paper: {\r\n        width: '100%',\r\n        height: '100%',\r\n        alignItems: 'center',\r\n    },\r\n    card: {\r\n        width: 800,\r\n        height: 600,\r\n        maxWidth: 800\r\n    }\r\n});\r\n\r\n/* \r\n    This presentational component renders a single album box\r\n*/\r\nconst Album = ({\r\n    classes,\r\n    image,\r\n    id,\r\n}) => {\r\n    return (\r\n        <Button className={classes.button} component={Link} to={\"/album/\" + id}>\r\n            {image != \"\" ?\r\n                <img src={image} alt={image} style={{height: 300}}/>\r\n            : <Typography variant=\"display1\">No Photo</Typography>\r\n            }\r\n        </Button>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(Album);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n    TextField, \r\n    withStyles, \r\n    Button, \r\n    Input, \r\n    Typography, \r\n    Dialog, \r\n    DialogTitle, \r\n    DialogActions, \r\n    DialogContent,\r\n    DialogContentText \r\n} from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport * as albumActions from '../../actions/AlbumActions';\r\n\r\n// CSS in JS styles for this component\r\nconst styles = theme => ({\r\n    container: {\r\n        height: '100%',\r\n        //width: 300,\r\n        //height: 100,\r\n    },\r\n    button: {\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: 200,\r\n        marginBottom: theme.spacing.unit\r\n    },\r\n});\r\n\r\n// Save the album to local storage\r\nconst saveAlbum = (name, id) => {\r\n    let savedAlbum = localStorage.getItem(\"album-\" + id);\r\n    if(!savedAlbum){\r\n        localStorage.setItem(\"album-\" + id, id + \"|\" + name + \"|\");\r\n    }\r\n}\r\n\r\n// Form to create a new album\r\n// Using a class since the data can be handled with redux,\r\n// so we don't need to pass data to parents\r\nclass CreateAlbumForm extends React.Component {\r\n    state = {\r\n        name: '',\r\n        open: false\r\n    }\r\n\r\n    // Save the changes to the name textField\r\n    handleChange = event => {\r\n        this.setState({\r\n            name: event.target.value\r\n        })\r\n    }\r\n\r\n    // Create the album from the value of the textField, saving it to local storage\r\n    handleSubmit = name => {\r\n        this.props.createAlbum(-1, name, []);\r\n        this.setState({name: \"\"});\r\n        console.log(this.props.nextID)\r\n        saveAlbum(name, this.props.nextID);\r\n        this.closeForm();\r\n    }\r\n\r\n    // Open the dialog to create the album\r\n    openForm = () => {\r\n        this.setState({open: true});\r\n    }\r\n\r\n    // Close the dialog to create the album\r\n    closeForm = () => {\r\n        this.setState({open: false});\r\n    }\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n        console.log(this.props.nextID)\r\n        return (\r\n            <div className={classes.container}>\r\n                <Button variant=\"outlined\" color=\"secondary\" className={classes.button} onClick={this.openForm}>\r\n                    <AddIcon style={{fontSize: 50}}/>\r\n                </Button>\r\n                <Dialog className={classes.dialog} open={this.state.open} aria-labelledby=\"create-album-title\">\r\n                <DialogTitle id=\"create-album-title\">\r\n                    Enter Album Name\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Enter the album name\r\n                    </DialogContentText>\r\n                    <TextField \r\n                        id=\"name\"\r\n                        label=\"name\"\r\n                        //className={classes.textField}\r\n                        value={this.state.name}\r\n                        margin=\"dense\"\r\n                        onChange={this.handleChange}\r\n                        autoFocus\r\n                        fullWidth\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button color=\"primary\" onClick={this.closeForm}>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button color=\"primary\" onClick={() => this.handleSubmit(this.state.name)}>\r\n                        Create Album\r\n                    </Button>\r\n                </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst styledForm = withStyles(styles)(CreateAlbumForm);\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        albumList: state.album.albums,\r\n        nextID: state.album.nextId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        //uploadPhoto: file => { dispatch(photoActions.uploadPhoto(file));},\r\n        createAlbum: (id, name, photos) => { dispatch(albumActions.createAlbum(id, name, photos)); },\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(styledForm);","import React from 'react';\r\nimport { Grid, withStyles, GridList, GridListTile, Button, Icon, GridListTileBar } from '@material-ui/core';\r\nimport Album from './Album';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CreateAlbumForm from '../Common/CreateAlbumForm';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        //width: '90%',\r\n        marginTop: 50,\r\n        //flexGrow: 2,\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        flexWrap: 'wrap',\r\n        overflow: 'hidden',\r\n        // marginLeft: '5%',\r\n        // marginRight: '5%'\r\n        //minHeight: 'calc(100vh - 72px)'\r\n    },\r\n    grid: {\r\n        width: '90%',\r\n        paddingLeft: '10%',\r\n        paddingRight: '10%',\r\n        //maxWidth: 1200,\r\n        margin: 0,\r\n        //minHeight: 300\r\n    },\r\n    gridItem: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        width: '100%'\r\n    },\r\n    tile: {\r\n        display: 'flex',\r\n        width: '100%'\r\n    }\r\n});\r\n\r\nconst AlbumView = ({\r\n    classes,\r\n    albumList,\r\n    photoList,\r\n    createAlbum\r\n}) => {\r\n    // TODO: Implement ability to type name of album / change name / select photos\r\n    console.log(albumList)\r\n    console.log(Object.keys(photoList))\r\n    return (\r\n        <div className={classes.root}>\r\n            <GridList cellHeight={300} cols={4} className={classes.grid}>\r\n                {console.log(albumList)}\r\n                {Object.values(albumList).map(album => {\r\n                    let image = \"\";\r\n                    if(album.photos.length){\r\n                        image = Object.values(photoList).filter(photo => photo.id === album.photos[0]);\r\n                    }\r\n                    let length = album.photos.filter(photo => Object.keys(photoList).includes(photo.toString())).length;\r\n                    return (\r\n                        <GridListTile \r\n                            key={album.id} \r\n                            cols={1} \r\n                            classes={{\r\n                                tile: classes.tile\r\n                            }} \r\n                            className={classes.gridItem}>\r\n                            <Album \r\n                                image={image.length ? image[0].photo : \"\"}\r\n                                id={album.id}\r\n                            />\r\n                            <GridListTileBar \r\n                                style={{textAlign: 'left'}}\r\n                                title={album.name}\r\n                                subtitle={<span>Photos: {length}</span>}\r\n                            />\r\n                        </GridListTile>\r\n                    );\r\n                })\r\n                }\r\n                {/* <GridListTile cols={1} className={classes.gridItem}>\r\n                    <ImageUpload />\r\n                </GridListTile> */}\r\n                <GridListTile>\r\n                    {/* <Button color=\"secondary\" style={{width: '100%', height: '100%'}} onClick={() => createAlbum('test')}>\r\n                        <AddIcon style={{fontSize: 60}}/>\r\n                    </Button> */}\r\n                    <CreateAlbumForm/>\r\n                </GridListTile>\r\n            </GridList>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(AlbumView);","import react from 'react';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Photo from '../Photo/Photo';\r\nimport Album from './Album';\r\nimport PhotoView from '../Photo/PhotoView';\r\nimport AlbumView from './AlbumView';\r\nimport { Typography, TextField } from '@material-ui/core';\r\nimport * as photoActions from '../../actions/PhotoActions';\r\nimport * as albumActions from '../../actions/AlbumActions';\r\nimport FullScreen from '../Photo/FullScreen';\r\n\r\nclass AllAlbums extends React.Component {\r\n\r\n    state = {\r\n        viewing: -1,\r\n        open: false\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({viewing: -1});\r\n    }\r\n\r\n    clickImage = id => {\r\n        this.setState({viewing: id});\r\n    }\r\n\r\n    deletePhoto = id => {\r\n        localStorage.setItem(\"images\", \r\n            localStorage.getItem(\"images\")\r\n                        .split(\" \")\r\n                        .filter(image => {\r\n                            return image.slice(0, image.indexOf(\":\")) != id;\r\n                        })\r\n                        .join(\" \")\r\n        )\r\n        this.props.closeDialog();\r\n        this.props.deletePhoto(id);\r\n    }\r\n\r\n    openDialog = () => {\r\n        this.setState({open: true});\r\n    }\r\n\r\n    closeDialog = () => {\r\n        this.setState({open: false});\r\n    }\r\n\r\n    createAlbum = (id, name, photos) => {\r\n        this.props.createAlbum(id, name, photos);\r\n    }\r\n\r\n    componentDidMount(){\r\n        Object.keys(localStorage).forEach(key => {\r\n            if(key.includes(\"album\")){\r\n                let album = localStorage.getItem(key).split(\"|\");\r\n                this.createAlbum(parseInt(album[0]), album[1], album[2] ? \r\n                    album[2].split(',').map(id => parseInt(id))\r\n                    : []\r\n                );\r\n            } else if(key.includes(\"photo\")){\r\n                let photo = localStorage.getItem(key).split(\"|\");\r\n                this.props.uploadPhoto(photo);\r\n            }\r\n        })\r\n    }\r\n\r\n    render(){\r\n        let albumID = this.props.match.params.id;\r\n        let image = this.props.match.params.image;\r\n        if(albumID){\r\n            let album = this.props.albumList[albumID];\r\n            let photos = album ? Object.values(this.props.photoList).filter(photo => album.photos.includes(photo.id)) : [];\r\n            if(image){\r\n                let pic = photos.filter(photo => photo.id == image);\r\n                if(pic.length){\r\n                    let prev = photos[photos.indexOf(pic[0]) - 1];\r\n                    let next = photos[photos.indexOf(pic[0]) + 1];\r\n                    return (\r\n                        <FullScreen \r\n                            image={pic[0]} \r\n                            prevId={prev ? prev.id : 0} \r\n                            nextId={next ? next.id : -1}\r\n                            handleDelete={this.deletePhoto}\r\n                            closeDialog={this.closeDialog}\r\n                            openDialog={this.openDialog}\r\n                            open={this.state.open}\r\n                            type={\"album\"}\r\n                            albumID={albumID}\r\n                        />\r\n                    );\r\n                }\r\n            }\r\n            return (\r\n                <PhotoView \r\n                    list={photos}\r\n                    type=\"album\"\r\n                    albumID={albumID}\r\n                />\r\n            )\r\n        }\r\n        return (\r\n            <AlbumView\r\n                albumList={this.props.albumList}\r\n                photoList={this.props.photoList}\r\n                createAlbum={this.createAlbum.bind(this)}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        photoList: state.photo.photos,\r\n        albumList: state.album.albums,\r\n        nextID: state.album.nextId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        uploadPhoto: photo => { dispatch(photoActions.uploadPhoto(photo));},\r\n        createAlbum: (id, name, photos) => { dispatch(albumActions.createAlbum(id, name, photos));}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AllAlbums);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { AppBar, Toolbar, Typography, IconButton } from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n// CSS in JS styles for this component\r\nconst styles = theme => ({\r\n    root: {\r\n        flexGrow: 1\r\n    },\r\n    grow: {\r\n        flexGrow: 1\r\n    },\r\n    menuButton: {\r\n        marginLeft: -12,\r\n        marginRight: 20\r\n    },\r\n    toolbar: {\r\n        textAlign: 'left'\r\n    },\r\n    navbar: theme.mixins.toolbar,\r\n});\r\n\r\n/* \r\n    Presentational component for the navbar at the top of the page\r\n    Takes callback to handle toggling of menu drawer\r\n*/\r\nconst Navbar = ({\r\n    classes,\r\n    toggleDrawer\r\n}) => {\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"fixed\" color=\"primary\">\r\n                <Toolbar className={classes.toolbar}>\r\n                    <IconButton \r\n                        className={classes.menuButton} \r\n                        color=\"inherit\" \r\n                        aria-label=\"Menu\" \r\n                        onClick={toggleDrawer}>\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\r\n                        Look, Photos\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            {/* below used to create spacing below app bar*/}\r\n            <div className={classes.navbar}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nNavbar.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    toggleDrawer: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Navbar);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { Drawer, List, ListItem, ListItemText, withStyles } from '@material-ui/core';\r\n\r\n// CSS in JS styles for this component\r\nconst styles = theme => ({\r\n    list: {\r\n        width: 250,\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    navItems: {\r\n\r\n    }\r\n});\r\n\r\n// Presentational component for the nav menu drawer on the app bar\r\nconst NavMenu = ({\r\n    classes,\r\n    navOpen,\r\n    toggleDrawer\r\n}) => {\r\n\r\n    // List of navigation items for the nav menu\r\n    const navItems = (\r\n        <div className={classes.list}>\r\n            <List component=\"nav\">\r\n                <ListItem button component={Link} to='/photo'>\r\n                    <ListItemText primary=\"All Photos\" />\r\n                </ListItem>\r\n                <ListItem button component={Link} to='/album'>\r\n                    <ListItemText primary=\"Albums\" />\r\n                </ListItem>\r\n                <ListItem button component={Link} to='/'>\r\n                    <ListItemText primary=\"Suggestions\" />\r\n                </ListItem>\r\n            </List>\r\n        </div>\r\n    );\r\n\r\n    console.log(navOpen);\r\n\r\n    return (\r\n        <div>\r\n            <Drawer anchor=\"left\" open={navOpen} onClose={toggleDrawer}>\r\n                <div\r\n                    tabIndex={0}\r\n                    role=\"button\"\r\n                    onClick={toggleDrawer}\r\n                    onKeyDown={toggleDrawer}\r\n                >\r\n                    {navItems}\r\n                </div>\r\n            </Drawer>\r\n        </div>\r\n    );\r\n}\r\n\r\nNavMenu.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    navOpen: PropTypes.bool.isRequired,\r\n    toggleDrawer: PropTypes.func.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(NavMenu);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as commonActions from '../../actions/CommonActions';\r\nimport Navbar from './Navbar';\r\nimport NavMenu from './NavMenu';\r\n\r\n/* \r\n    This component is a container for the app bar\r\n*/\r\nclass Header extends React.Component {\r\n    render(){\r\n        return (\r\n            <header className=\"App-header\">\r\n                <Navbar toggleDrawer={this.props.toggleDrawer}/>\r\n                <NavMenu navOpen={this.props.navOpen} toggleDrawer={this.props.toggleDrawer} />\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        navOpen: state.common.navOpen,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        toggleDrawer: () => { dispatch(commonActions.toggleNavOpen()) }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","import * as actionTypes from './actionTypes';\r\n\r\n// Action to open the app bar nav menu\r\nexport const toggleNavOpen = () => {\r\n    return { type: actionTypes.TOGGLE_NAV_OPEN };\r\n}","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport { MuiThemeProvider } from '@material-ui/core/styles';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport theme from './theme';\r\nimport PhotoAlbum from './components/Photo/PhotoAlbum';\r\nimport AllAlbums from './components/Album/AllAlbums';\r\nimport Header from './components/Common/Header';\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <MuiThemeProvider theme={theme}>\r\n                <Header />\r\n                <div className=\"App\">\r\n                    <Switch>\r\n                        <Route exact path='/photo/:id?' component={PhotoAlbum} />\r\n                        <Route exact path='/album/:id?/:image?' component={AllAlbums} />\r\n                        <Route exact path='/' component={PhotoAlbum} />\r\n                    </Switch>\r\n                </div>\r\n            </MuiThemeProvider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\r\n    common: {\r\n        navOpen: false\r\n    },\r\n    photo: {\r\n        nextId: 0,\r\n        photos: {}\r\n    },\r\n    album: {\r\n        nextId: 0,\r\n        albums: {}\r\n    }\r\n}\r\n\r\nexport default initialState;","import { combineReducers } from 'redux';\r\nimport common from './reducers/commonReducer';\r\nimport album from './reducers/albumReducer';\r\nimport photo from './reducers/photoReducer';\r\n\r\nconst reducer = combineReducers({\r\n    common,\r\n    album,\r\n    photo\r\n});\r\n\r\nexport default reducer;","import initialState from './initialState';\r\n\r\nexport default function common(state = initialState.common, action){\r\n    switch(action.type){\r\n        case 'TOGGLE_NAV_OPEN': {\r\n            console.log(state.navOpen);\r\n            return Object.assign({}, state, {\r\n                navOpen: !state.navOpen\r\n            });\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","import initialState from './initialState';\r\n\r\n// Reducer for album actions\r\nexport default function album(state = initialState.album, action){\r\n    switch(action.type){\r\n        case 'CREATE_ALBUM': {\r\n            if(action.id === -1){\r\n                return Object.assign({}, state, {\r\n                    albums: Object.assign({}, state.albums,  {\r\n                        [state.nextId]: {\r\n                            id: state.nextId,\r\n                            name: action.name,\r\n                            photos: action.photos\r\n                        }\r\n                    }),\r\n                    nextId: state.nextId + 1\r\n                })\r\n            } else {\r\n                return Object.assign({}, state, {\r\n                    albums: Object.assign({}, state.albums,  {\r\n                        [action.id]: {\r\n                            id: action.id,\r\n                            name: action.name,\r\n                            photos: action.photos\r\n                        }\r\n                    }),\r\n                    nextId: Math.max(state.nextId, action.id) + 1\r\n                })\r\n            }\r\n        }\r\n        case 'ADD_TO_ALBUM': {\r\n            let match = state.albums[action.albumID];\r\n            if(!match.photos.includes(action.photoID)){\r\n                match.photos = action.photoList;\r\n            } else {\r\n                return state;\r\n            }\r\n            return Object.assign({}, state, {\r\n                albums: Object.assign({}, state.albums, {\r\n                    [action.albumID]: match\r\n                })\r\n            })\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};","import initialState from './initialState';\r\n\r\nexport default function album(state = initialState.photo, action){\r\n    switch(action.type){\r\n        case 'UPLOAD_PHOTO': {\r\n            if(action.photo[0] !== -1){\r\n                if(!Object.keys(state.photos).includes(action.photo[0])){\r\n                    return Object.assign({}, state, {\r\n                        nextId: Math.max(state.nextId + 1, action.photo[0]) + 1,\r\n                        photos: Object.assign({}, state.photos, {\r\n                            [action.photo[0]]: {\r\n                                id: action.photo[0],\r\n                                photo: action.photo[1]\r\n                            }\r\n                        })\r\n                    });\r\n                } else {\r\n                    return state;\r\n                }\r\n            } else {\r\n                return Object.assign({}, state, {\r\n                    nextId: state.nextId + 1,\r\n                    photos: Object.assign({}, state.photos, {\r\n                        [state.nextId]: {\r\n                            id: state.nextId,\r\n                            photo: action.photo[1]\r\n                        }\r\n                    })\r\n                });\r\n            }\r\n        }\r\n        case 'DELETE_PHOTO': {\r\n            return Object.assign({}, state, {\r\n                nextId: state.nextId,\r\n                photos: state.photos.filter(photo =>\r\n                    photo.id != action.id    \r\n                )\r\n            })\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport reducer from './CombinedReducers';\n\nconst store = createStore(reducer);\n\nconsole.log(store.getState())\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </BrowserRouter>, \n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}