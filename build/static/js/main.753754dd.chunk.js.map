{"version":3,"sources":["theme.js","components/Photo.js","components/PhotoView.js","components/AllPhotos.js","actions/actionTypes.js","components/Navbar.js","components/NavMenu.js","components/Header.js","actions/CommonActions.js","App.js","serviceWorker.js","reducers/initialState.js","CombinedReducers.js","reducers/commonReducer.js","index.js"],"names":["createMuiTheme","palette","primary","blue","secondary","pink","error","red","withStyles","theme","frame","paper","width","height","alignItems","_ref","classes","image","react_default","a","createElement","index_es","src","alt","style","root","marginTop","spacing","unit","display","justifyContent","flexWrap","overflow","grid","margin","gridItem","photoList","className","cellHeight","cols","map","photo","key","num","AllPhotos","components_PhotoView","components_Photo","React","Component","TOGGLE_NAV_OPEN","flexGrow","grow","menuButton","marginLeft","marginRight","navbar","mixins","toolbar","toggleDrawer","position","color","aria-label","onClick","Menu_default","variant","list","backgroundColor","background","navItems","navOpen","component","button","console","log","anchor","open","onClose","tabIndex","role","onKeyDown","Header","components_Navbar","this","props","components_NavMenu","connect","state","common","dispatch","type","actionTypes","App","styles","components_Header","Switch","Route","exact","path","Boolean","window","location","hostname","match","initialState","reducer","combineReducers","arguments","length","undefined","action","Object","assign","store","createStore","getState","ReactDOM","render","BrowserRouter","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.753754dd.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\r\nimport blue from '@material-ui/core/colors/blue';\r\nimport pink from '@material-ui/core/colors/pink';\r\nimport red from '@material-ui/core/colors/red';\r\n\r\nexport default createMuiTheme({\r\n    palette: {\r\n        primary: blue,\r\n        secondary: pink,\r\n        error: red\r\n    },\r\n})","import React from 'react';\r\nimport { Grid, withStyles, Paper, Typography, Button } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n    frame: {\r\n        // width: 300,\r\n        // height: 300,\r\n    },\r\n    paper: {\r\n        width: '100%',\r\n        height: '100%',\r\n        alignItems: 'center',\r\n    }\r\n});\r\n\r\nconst Photo = ({\r\n    classes,\r\n    image\r\n}) => {\r\n    return (\r\n        <Button>\r\n            <img src={image} alt={image} style={{width: 300, height: 300}}/>\r\n        </Button>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(Photo);","import React from 'react';\r\nimport { Grid, withStyles, GridList, GridListTile } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        //width: '100%',\r\n        marginTop: theme.spacing.unit,\r\n        //flexGrow: 2,\r\n        display: 'flex',\r\n        justifyContent: 'space-around',\r\n        flexWrap: 'wrap',\r\n        overflow: 'hidden'\r\n        //minHeight: 'calc(100vh - 72px)'\r\n    },\r\n    grid: {\r\n        width: '100%',\r\n        //maxWidth: 1200,\r\n        margin: 0,\r\n        //minHeight: 300\r\n    },\r\n    gridItem: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        width: '100%'\r\n    }\r\n});\r\n\r\nconst PhotoView = ({\r\n    classes,\r\n    photoList\r\n}) => {\r\n    return (\r\n        <div className={classes.root}>\r\n            <GridList cellHeight={300} cols={4} className={classes.grid}>\r\n                {photoList.map(photo => {\r\n                        return (\r\n                            <GridListTile key={photo.num} cols={1} className={classes.gridItem}>\r\n                                {photo.photo}\r\n                            </GridListTile>\r\n                        );\r\n                    })\r\n                }\r\n            </GridList>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(PhotoView);","import React from 'react';\r\nimport Photo from './Photo';\r\nimport PhotoView from './PhotoView';\r\n\r\nclass AllPhotos extends React.Component {\r\n    render(){\r\n        return (\r\n            <PhotoView photoList={[0, 1, 2, 3, 4, 5, 6, 7, 8].map(num => {return {photo: <Photo image='https://vignette.wikia.nocookie.net/memoryalpha/images/5/52/Earl_Grey_tea%2C_hot.jpg/revision/latest?cb=20121209020531&path-prefix=en'/>, key: num}})} />\r\n        );\r\n    }\r\n}\r\n\r\nexport default AllPhotos;","export const TOGGLE_NAV_OPEN = \"TOGGLE_NAV_OPEN\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { AppBar, Toolbar, Typography, IconButton } from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        flexGrow: 1\r\n    },\r\n    grow: {\r\n        flexGrow: 1\r\n    },\r\n    menuButton: {\r\n        marginLeft: -12,\r\n        marginRight: 20\r\n    },\r\n    navbar: theme.mixins.toolbar,\r\n});\r\n\r\nconst Navbar = ({\r\n    classes,\r\n    toggleDrawer\r\n}) => {\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"fixed\" color=\"primary\">\r\n                <Toolbar>\r\n                    <IconButton \r\n                        className={classes.menuButton} \r\n                        color=\"inherit\" \r\n                        aria-label=\"Menu\" \r\n                        onClick={toggleDrawer}>\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\r\n                        This Here App\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            {/* below used to create spacing below app bar*/}\r\n            <div className={classes.navbar}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nNavbar.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    toggleDrawer: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Navbar);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Drawer, List, ListItem, ListItemText, withStyles } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n    list: {\r\n        width: 250,\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    navItems: {\r\n\r\n    }\r\n});\r\n\r\nconst NavMenu = ({\r\n    classes,\r\n    navOpen,\r\n    toggleDrawer\r\n}) => {\r\n\r\n    const navItems = (\r\n        <div className={classes.list}>\r\n            <List component=\"nav\">\r\n                <ListItem button>\r\n                    <ListItemText primary=\"Test 1\" />\r\n                </ListItem>\r\n                <ListItem button>\r\n                    <ListItemText primary=\"Test 2\" />\r\n                </ListItem>\r\n                <ListItem button>\r\n                    <ListItemText primary=\"Test 3\" />\r\n                </ListItem>\r\n            </List>\r\n        </div>\r\n    );\r\n\r\n    console.log(navOpen);\r\n\r\n    return (\r\n        <div>\r\n            <Drawer anchor=\"left\" open={navOpen} onClose={toggleDrawer}>\r\n                <div\r\n                    tabIndex={0}\r\n                    role=\"button\"\r\n                    onClick={toggleDrawer}\r\n                    onKeyDown={toggleDrawer}\r\n                >\r\n                    {navItems}\r\n                </div>\r\n            </Drawer>\r\n        </div>\r\n    );\r\n}\r\n\r\nNavMenu.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    navOpen: PropTypes.bool.isRequired,\r\n    toggleDrawer: PropTypes.func.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(NavMenu);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as commonActions from '../actions/CommonActions';\r\nimport Navbar from './Navbar';\r\nimport NavMenu from './NavMenu';\r\n\r\nclass Header extends React.Component {\r\n    render(){\r\n        return (\r\n            <header className=\"App-header\">\r\n                <Navbar toggleDrawer={this.props.toggleDrawer}/>\r\n                <NavMenu navOpen={this.props.navOpen} toggleDrawer={this.props.toggleDrawer} />\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        navOpen: state.common.navOpen,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        toggleDrawer: () => { dispatch(commonActions.toggleNavOpen()) }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","import * as actionTypes from './actionTypes';\r\n\r\nexport function toggleNavOpen(){\r\n    return { type: actionTypes.TOGGLE_NAV_OPEN };\r\n}","import React, { Component } from 'react';\nimport './App.css';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport { Route, Switch } from 'react-router-dom';\nimport theme from './theme';\nimport AllPhotos from './components/AllPhotos';\nimport Header from './components/Header';\n\nclass App extends Component {\n    render() {\n        return (\n            <MuiThemeProvider theme={theme}>\n                <div className=\"App\">\n                    <Header />\n                    <Switch>\n                        <Route exact path='/' component={AllPhotos} />\n                    </Switch>\n                </div>\n            </MuiThemeProvider>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\r\n    common: {\r\n        navOpen: false\r\n    },\r\n\r\n}\r\n\r\nexport default initialState;","import { combineReducers } from 'redux';\r\nimport common from './reducers/commonReducer';\r\n\r\nconst reducer = combineReducers({\r\n    common\r\n});\r\n\r\nexport default reducer;","import initialState from './initialState';\r\n\r\nexport default function common(state = initialState.common, action){\r\n    console.log(action.type);\r\n    switch(action.type){\r\n        case 'TOGGLE_NAV_OPEN': {\r\n            console.log(state.navOpen);\r\n            return Object.assign({}, state, {\r\n                navOpen: !state.navOpen\r\n            });\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport reducer from './CombinedReducers';\n\nconst store = createStore(reducer);\n\nconsole.log(store.getState())\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </BrowserRouter>, \n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}